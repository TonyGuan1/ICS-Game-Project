package javaapplication;

import java.util.Random;
import java.util.Scanner;

public class RockPaperScissors {

    private User user;
    private Computer computer; //"computer" is just an identifier
    
    int tie = 0;
    int wins = 0;
    int round = 0;

    private enum Move {
        ROCK, PAPER, SCISSORS;

        public int compareMoves(Move otherMove) {
            // Tie
            if (this == otherMove) {
                return 0;
            }

            switch (this) {
                case ROCK:
                    return (otherMove == SCISSORS ? 1 : -1);
                case PAPER:
                    return (otherMove == ROCK ? 1 : -1);
                case SCISSORS:
                    return (otherMove == PAPER ? 1 : -1);
            }
            // Should never reach here
            return 0;
        }
    }

    private class User {

        private final Scanner inputScanner;

        public User() {
            inputScanner = new Scanner(System.in);
        }

        public RockPaperScissors.Move getMove() {
            // Prompt the user
            System.out.println("Pick one.");
            System.out.print("Rock, Paper, or Scissors? ");

            // Get the user input
            String userInput = inputScanner.nextLine();
            userInput = userInput.toUpperCase(); //Change input to upper
            char firstLetter = userInput.charAt(0);
            if (firstLetter == 'R' || firstLetter == 'P' || firstLetter == 'S') {
                // User has entered a valid input
                switch (firstLetter) {
                    case 'R':
                        return RockPaperScissors.Move.ROCK;
                    case 'P':
                        return RockPaperScissors.Move.PAPER;
                    case 'S':
                        return RockPaperScissors.Move.SCISSORS;
                }
            }
            // User has not entered a valid input. Prompt again.
            System.out.println("Invalid");
            return getMove();
            
        }

        public boolean playAgain() {
            System.out.print("Do you want to play again? ");
            String userInput = inputScanner.nextLine();
            userInput = userInput.toUpperCase();
            return userInput.charAt(0) == 'Y';
        }
    }

    public RockPaperScissors() {
        user = new User();
        computer = new Computer();
    }

    private class Computer {

        public RockPaperScissors.Move getMove() {
            RockPaperScissors.Move[] moves = RockPaperScissors.Move.values();
            Random random = new Random();
            int storage = random.nextInt(moves.length);
            return moves[storage];
        }
    }

    public void startGame() {
        System.out.println("Welcome to Rock, Paper, Scissors!!!");
        // Get moves
        RockPaperScissors.Move userMove = user.getMove();
        RockPaperScissors.Move computerMove = computer.getMove();
        round++;
        System.out.println("\nYou played " + userMove + ".");
        System.out.println("Computer played " + computerMove + ".\n");
        // Compare moves and determine winner
        int compareMoves = userMove.compareMoves(computerMove);
        switch (compareMoves) {
            case 0: // Tie
                tie++;
                System.out.println("Tie!");
                break;
            case 1: // User wins
                wins++;
                System.out.println(userMove + " beats " + computerMove + ". You won!");
                break;
            case 2: // Computer wins
                System.out.println(computerMove + " beats " + userMove + ". You lost.");

                break;
        }
        // Ask the user to play again
        if (user.playAgain()) {
            System.out.println();
            startGame();
        } else {
            System.out.println(new String(new char[56]).replace("\0", "_"));
            System.out.println(String.format("|%-10s|%-10s|%-10s|%-10s|%-10s|","Wins","Losses","Ties","Games","% Won"));
            System.out.println(String.format("|%-10d|%-10d|%-10d|%-10d|%-10.1f|",wins,(round-(wins+tie)),tie,round,((float)wins/(float)round)*100));
            System.out.println(new String(new char[55]).replace("\0", " Ì…"));
        }
    }

    public static void main(String[] args) {
        RockPaperScissors games = new RockPaperScissors();
        games.startGame(); //Calls method and begins game
    }
}
